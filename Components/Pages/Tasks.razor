@page "/tasks"
@using APRSrv.Models
@attribute [StreamRendering]

<PageTitle>Tasks</PageTitle>

<h1>Task list</h1>

<p>robot task list</p>

@if (tasks == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Task Id</th>
                <th>Value</th>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in tasks)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TaskId</td>
                    <td>@forecast.TaskValue</td>
                    <td>@forecast.TaskName</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private RobotTask[]? tasks;

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        await Task.Delay(250);

        var startDate = DateOnly.FromDateTime(DateTime.Now);

        int[] TaskValues = new[] { 135, 136, 137, 144, 145, 146, 147, 148, 149, 150 };

        var summaries = new[] { "Free", "Run", "LinearMotion", "Rotate", "Arc", "Adjustment", "Parking", "ExtenionFork", "Furcation", "SyncExit" };

        tasks = Enumerable.Range(0, summaries.Length).Select(index => new RobotTask
        {
            Date = DateTime.Now,

            TaskId = index,

            TaskValue = TaskValues.ElementAt(index),

            TaskName = summaries.ElementAt(index)
        }).ToArray();
    }    
}
